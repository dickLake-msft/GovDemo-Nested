{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "rg-name":{
            "type":"string"
        }
    },
    "functions": [],
    "variables": {
        "FrontDoorProfileName": "[concat(parameters('rg-name'), '-FD-Juice')]",
        "FrontDoorWAFName": "[concat(parameters('rg-name'), 'NSFDWAF')]",
        "healthProbeName":"[concat(variables('FrontDoorProfileName'),'-healthProbeSettings-', uniqueString(resourceGroup().name))]",
        "loadBalancingName": "[concat(variables('FrontDoorProfileName'),'-loadBalancingSettings-', uniqueString(resourceGroup().name))]",
        "frontendEndpointName": "[concat(variables('FrontDoorProfileName'), '-azurefd-us')]",
        "frontendEndpointHostName": "[concat(variables('FrontDoorProfileName'),'.azurefd.us')]",
        "backendPoolName": "[concat(parameters('rg-name'), '-FD-backendPool1')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
            "apiVersion": "2020-11-01",
            "name": "[variables('FrontDoorWAFName')]",
            "location": "global",
            "sku": {
                "name": "Classic_AzureFrontDoor"
            },
            "properties": {
                "policySettings": {
                    "enabledState": "Enabled",
                    "mode": "Prevention",
                    "redirectUrl": "https://www.microsoft.com/en-us/edge",
                    "customBlockResponseStatusCode": 403,
                    "customBlockResponseBody": "[base64('<html><head><title>WAF Demo</title></head><body bgcolor=\"#FFB299\"><p><h1><strong>WAF Unique Response Code</strong></h1></p><p>Contact us and provide the following code: {(azure-ref)}<br></p></body></html>')]",
                    "requestBodyCheck": "Disabled"
                },
                "customRules": {
                    "rules": [
                        {
                            "name": "BlockGeoLocationChina",
                            "enabledState": "Enabled",
                            "priority": 100,
                            "ruleType": "MatchRule",
                            "rateLimitDurationInMinutes": 1,
                            "rateLimitThreshold": 100,
                            "matchConditions": [
                                {
                                "matchVariable": "RemoteAddr",
                                "operator": "GeoMatch",
                                "negateCondition": false,
                                "matchValue": [
                                    "CN"
                                ],
                                "transforms": []
                                }
                            ],
                            "action": "Block"
                        },
                        {
                            "name": "RuleRedirectInternetExplorer",
                            "enabledState": "Enabled",
                            "priority": 200,
                            "ruleType": "MatchRule",
                            "rateLimitDurationInMinutes": 1,
                            "rateLimitThreshold": 100,
                            "matchConditions": [
                                {
                                "matchVariable": "RequestHeader",
                                "selector": "User-Agent",
                                "operator": "Contains",
                                "negateCondition": false,
                                "matchValue": [
                                    "rv:11.0"
                                ],
                                "transforms": []
                                }
                            ],
                            "action": "Redirect"
                        },
                        {
                            "name": "RatelimitRequest",
                            "enabledState": "Enabled",
                            "priority": 300,
                            "ruleType": "RateLimitRule",
                            "rateLimitDurationInMinutes": 1,
                            "rateLimitThreshold": 5,
                            "matchConditions": [
                                {
                                "matchVariable": "RequestUri",
                                "operator": "Contains",
                                "negateCondition": false,
                                "matchValue": [
                                    "search"
                                ],
                                "transforms": []
                                }
                            ],
                            "action": "Block"
                        }
                    ]
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                        "ruleSetType": "Microsoft_DefaultRuleSet",
                        "ruleSetVersion": "1.1"
                        },
                        {
                        "ruleSetType": "Microsoft_BotManagerRuleSet",
                        "ruleSetVersion": "1.0"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/frontdoors",
            "name": "[variables('FrontDoorProfileName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', variables('FrontDoorWAFName'))]"
            ],
            "location": "global",
            "tags": {},
            "properties": {
                "friendlyName": "[variables('FrontDoorProfileName')]",
                "enabledState": "Enabled",
                "healthProbeSettings": [
                    {
                        "name": "[variables('healthProbeName')]",
                        "properties": {
                            "path": "/",
                            "protocol": "Https",
                            "intervalInSeconds": 30,
                            "healthProbeMethod": "Head",
                            "enabledState": "Enabled"
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "[variables('loadBalancingName')]",
                        "properties": {
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "additionalLatencyMilliseconds": 0
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "name": "[variables('frontendEndpointName')]",
                        "properties": {
                            "hostName": "[variables('frontendEndpointHostName')]",
                            "sessionAffinityEnabledState": "Enabled",
                            "sessionAffinityTtlSeconds": 0,
                            "webApplicationFirewallPolicyLink": {
                                "id":"[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies',variables('FrontDoorWAFName'))]"
                            },
                            "customHttpsConfiguration": null
                        }
                    }
                ],
                "backendPools": [
                    {
                        "name": "[variables('backendPoolName')]",
                        "properties": {
                            "backends": [
                                {
                                    "address": "contosogov-owaspdirect.azurewebsites.us",
                                    "enabledState": "Enabled",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "contosogov-owaspdirect.azurewebsites.us"
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontdoors/loadBalancingSettings',variables('FrontDoorProfileName'), variables('loadBalancingName'))]"
                            },
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontdoors/healthProbeSettings', variables('FrontDoorProfileName'), variables('healthProbeName'))]"
                            }
                        }
                    }
                ],
                "routingRules": [
                    {
                        "name": "[concat(parameters('rg-name'), '-routingrule-1')]",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('FrontDoorProfileName')), concat('/frontendEndpoints/', variables('frontendEndpointName')))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('FrontDoorProfileName')), concat('/backendPools/', variables('backendPoolName')))]"
                                },
                                "cacheConfiguration": null
                            }
                        }
                    }
                ],
                "backendPoolsSettings": {
                    "enforceCertificateNameCheck": "Enabled",
                    "sendRecvTimeoutSeconds": 30
                }
            }
        }
    ],
    "outputs": {}
}


