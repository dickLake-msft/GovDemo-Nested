{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appGatewaySpoke": {
      "type": "object"
    },
    "azureFirewallRouteId": {
      "type": "string"
    },
    "hub-networkID": {
      "type": "string"
    },
    "rg-name":{
      "type":"string"
    }

  },
  "variables": {
    "peering-name-spoke-to-hub": "WebApp-to-Hub",
    "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', concat(parameters('rg-name'), '-NS-AG-WAFv2'))]"
  },
  "resources": [
    {
      "comments": "Create vNet.",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[parameters('appGatewaySpoke').name]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ ],
      "properties": {
          "addressSpace": {
              "addressPrefixes": [
                  "[parameters('appGatewaySpoke').addressPrefix]"
              ]
          },
          "subnets": [
              {
                  "name": "[parameters('appGatewaySpoke').subnetName]",
                  "properties": {
                      "addressPrefix": "[parameters('appGatewaySpoke').subnetPrefix]"
                  }
              }
          ]
      },
      "resources": []
    },
    {
        "comments": "Virtual network peering spoke to hub",
        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
        "apiVersion": "2020-05-01",
        "name": "[concat(parameters('appGatewaySpoke').name, '/', variables('peering-name-spoke-to-hub'))]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('appGatewaySpoke').name)]"
        ],
        "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
                "id": "[parameters('hub-networkID')]"
            }
        }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "name": "[concat(parameters('rg-name'), '-NS-AGP-PIP')]",
      "location": "[resourceGroup().location]",
      "tags": {},
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2020-04-01",
      "name": "[concat(parameters('rg-name'), '-NS-AG-WAFv2')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies', concat(parameters('rg-name'), '-NS-AGPolicy'))]"
      ],
      "tags": {},
      "properties": {
        "sku": {
          "name": "WAF_v2",
          "tier": "WAF_v2",
          "capacity": 2
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('appGatewaySpoke').name ,parameters('appGatewaySpoke').subnetName)]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIp",
            "properties": {
              "PublicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('rg-name'), '-NS-AGP-PIP'))]"
              }
            }
          },
          {
            "name": "appGwPrivateFrontendIp",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('appGatewaySpoke').name, parameters('appGatewaySpoke').subnetName)]"
              },
              "privateIPAddress": "10.150.0.70",
              "privateIPAllocationMethod": "Static"
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port_80",
            "properties": {
              "port": 80
            }
          },
          {
            "name": "port_8080",
            "properties": {
              "port": 8080
            }
          },
          {
            "name": "port_443",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "PAAS-APP",
            "properties": {
              "backendAddresses": [
                {
                  "fqdn": "[concat(parameters('rg-name'),'-owaspdirect.azurewebsites.us')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "Default",
            "properties": {
              "port": 443,
              "protocol": "Https",
              "cookieBasedAffinity": "Disabled",
              "hostName": "[concat(parameters('rg-name'),'-owaspdirect.azurewebsites.us')]",
              "pickHostNameFromBackendAddress": false,
              "affinityCookieName": "ApplicationGatewayAffinity",
              "requestTimeout": 20
            }
          }
        ],
        "httpListeners": [
          {
            "name": "Public-HTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
              },
              "frontendPort": {
                "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_80')]"
              },
              "protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "PublicIPRule",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayId'), '/httpListeners/Public-HTTP')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/PAAS-APP')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/Default')]"
              }
            }
          }
        ],
        "enableHttp2": false,
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies', concat(parameters('rg-name'), '-NS-AGPolicy'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies",
      "apiVersion": "2019-09-01",
      "name": "[concat(parameters('rg-name'), '-NS-AGPolicy')]",
      "dependsOn": [],
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "customRules": [
          {
            "name": "SentinelBlockIP",
            "priority": 10,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RemoteAddr"
                  }
                ],
                "operator": "IPMatch",
                "negationConditon": false,
                "matchValues": [
                  "104.210.223.108"
                ],
                "transforms": []
              }
            ]
          },
          {
            "name": "BlockGeoLocationChina",
            "priority": 20,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RemoteAddr"
                  }
                ],
                "operator": "GeoMatch",
                "negationConditon": false,
                "matchValues": [
                  "CN"
                ],
                "transforms": []
              }
            ]
          },
          {
            "name": "BlockInternetExplorer11",
            "priority": 30,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestHeaders",
                    "selector": "User-Agent"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "rv:11.0"
                ],
                "transforms": []
              }
            ]
          }
        ],
        "policySettings": {
          "fileUploadLimitInMb": 100,
          "maxRequestBodySizeInKb": 128,
          "mode": "Prevention",
          "requestBodyCheck": true,
          "state": "Enabled"
        },
        "managedRules": {
          "exclusions": [],
          "managedRuleSets": [
            {
              "ruleSetType": "OWASP",
              "ruleSetVersion": "3.1",
              "ruleGroupOverrides": [
                {
                  "ruleGroupName": "REQUEST-920-PROTOCOL-ENFORCEMENT",
                  "rules": [
                    {
                      "ruleId": "920350",
                      "state": "Disabled"
                    },
                    {
                      "ruleId": "920320",
                      "state": "Disabled"
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "AppGateway_vNet_Id": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('appGatewaySpoke').name)]"
        }
  }
}